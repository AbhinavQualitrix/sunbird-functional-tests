<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="qualitrix-Inspiron-3521" ignored="341" name="Testing" tests="23" failures="1" timestamp="11 Jan 2019 07:47:46 GMT" time="483.304" errors="0">
  <testcase name="@BeforeMethod openApplication" time="0.0" classname="org.startup.BaseTest">
    <failure type="org.openqa.selenium.WebDriverException" message="unknown error: failed to change window state to maximized, current state is normal
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.41.578700 (2f1ed5f9343c13f73144538f15c00b370eda6706),platform=Linux 4.15.0-43-generic x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: &amp;apos;3.12.0&amp;apos;, revision: &amp;apos;7c6e0b3&amp;apos;, time: &amp;apos;2018-05-08T14:04:26.12Z&amp;apos;
System info: host: &amp;apos;qualitrix-Inspiron-3521&amp;apos;, ip: &amp;apos;127.0.1.1&amp;apos;, os.name: &amp;apos;Linux&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;4.15.0-43-generic&amp;apos;, java.version: &amp;apos;1.8.0_191&amp;apos;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578700 (2f1ed5f9343c13..., userDataDir: /tmp/.org.chromium.Chromium...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:40935}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 8f8845c66dfb5efe8d75dd5e8f281b40">
      <![CDATA[org.openqa.selenium.WebDriverException: unknown error: failed to change window state to maximized, current state is normal
  (Session info: chrome=71.0.3578.98)
  (Driver info: chromedriver=2.41.578700 (2f1ed5f9343c13f73144538f15c00b370eda6706),platform=Linux 4.15.0-43-generic x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'
System info: host: 'qualitrix-Inspiron-3521', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.15.0-43-generic', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.41.578700 (2f1ed5f9343c13..., userDataDir: /tmp/.org.chromium.Chromium...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:40935}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 71.0.3578.98, webStorageEnabled: true}
Session ID: 8f8845c66dfb5efe8d75dd5e8f281b40
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600)
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:828)
	at org.startup.BaseTest.openApplication(BaseTest.java:33)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod openApplication -->
  <testcase name="uploadContentTypeHtmlAndVerify" time="369.334" classname="org.testscript.creator.UploadContentTypeHtmlAndVerify">
    <failure type="java.lang.AssertionError" message="Failed to reject the uploadshtml">
      <![CDATA[java.lang.AssertionError: Failed to reject the uploadshtml
	at org.pageobjects.CreatorUserPageObj.rejectTheUploads(CreatorUserPageObj.java:1634)
	at org.testscript.creator.UploadContentTypeHtmlAndVerify.uploadContentTypeHtmlAndVerify(UploadContentTypeHtmlAndVerify.java:51)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- uploadContentTypeHtmlAndVerify -->
  <testcase name="uploadContentTypeEpubAndVerify" time="0.007" classname="org.testscript.creator.UploadContentTypeEpubAndVerify">
    <skipped/>
  </testcase> <!-- uploadContentTypeEpubAndVerify -->
  <testcase name="createLessonAndVerify" time="0.007" classname="org.testscript.creator.CreateLessonAndVerify">
    <skipped/>
  </testcase> <!-- createLessonAndVerify -->
  <testcase name="library_copyContent" time="0.003" classname="org.testscript.creator.UploadYoutubeFile">
    <skipped/>
  </testcase> <!-- library_copyContent -->
  <testcase name="createQuestionMCQAndVerify" time="0.003" classname="org.testscript.creator.CreateQuestionMCQAndVerify">
    <skipped/>
  </testcase> <!-- createQuestionMCQAndVerify -->
  <testcase name="createResourceAndVerify" time="0.003" classname="org.testscript.creator.CreateResourceAndVerify">
    <skipped/>
  </testcase> <!-- createResourceAndVerify -->
  <testcase name="uploadContentTypeMp4AndVerify" time="0.002" classname="org.testscript.creator.UploadContentTypeMp4AndVerify">
    <skipped/>
  </testcase> <!-- uploadContentTypeMp4AndVerify -->
  <testcase name="createQuestionMTFAndVerify" time="0.002" classname="org.testscript.creator.CreateQuestionMTFAndVerify">
    <skipped/>
  </testcase> <!-- createQuestionMTFAndVerify -->
  <testcase name="createQuestionFITBAndVerify" time="0.002" classname="org.testscript.creator.CreateQuestionFITBAndVerify">
    <skipped/>
  </testcase> <!-- createQuestionFITBAndVerify -->
  <testcase name="editBookAndVerify" time="0.003" classname="org.testscript.creator.EditBookAndVerify">
    <skipped/>
  </testcase> <!-- editBookAndVerify -->
  <testcase name="creatorQuestionAndVerify" time="0.005" classname="org.testscript.creator.CreatorQuestionAndVerify">
    <skipped/>
  </testcase> <!-- creatorQuestionAndVerify -->
  <testcase name="editUploadedContent" time="0.002" classname="org.testscript.creator.EditUploadedContent">
    <skipped/>
  </testcase> <!-- editUploadedContent -->
  <testcase name="createBookAndVerify" time="0.002" classname="org.testscript.creator.CreateBookAndVerify">
    <skipped/>
  </testcase> <!-- createBookAndVerify -->
  <testcase name="uploadContentWEBM" time="0.012" classname="org.testscript.creator.UploadContentWEBM">
    <skipped/>
  </testcase> <!-- uploadContentWEBM -->
  <testcase name="uploadH5pContentAndVerify" time="0.002" classname="org.testscript.creator.UploadContentTypeH5pAndVerify">
    <skipped/>
  </testcase> <!-- uploadH5pContentAndVerify -->
  <testcase name="consumeOpenCourseByPublicUser" time="0.001" classname="org.testscript.mentor.ConsumeOpenCourseByPublicUser">
    <skipped/>
  </testcase> <!-- consumeOpenCourseByPublicUser -->
  <testcase name="uploadContentTypePdfAndVerify" time="0.001" classname="org.testscript.creator.UploadContentTypePdfAndVerify">
    <skipped/>
  </testcase> <!-- uploadContentTypePdfAndVerify -->
  <testcase name="deleteTheCreatedContent" time="0.002" classname="org.testscript.creator.DeleteTheCreatedContent">
    <skipped/>
  </testcase> <!-- deleteTheCreatedContent -->
  <testcase name="uploadContentYOUTUBE" time="0.005" classname="org.testscript.creator.UploadContentYOUTUBE">
    <skipped/>
  </testcase> <!-- uploadContentYOUTUBE -->
  <testcase name="editResourceAndVerify" time="0.002" classname="org.testscript.creator.EditResourceAndVerify">
    <skipped/>
  </testcase> <!-- editResourceAndVerify -->
  <testcase name="searchCourseCreateInviteOnlyBatch" time="0.001" classname="org.testscript.mentor.SearchCourseCreateInviteOnlyBatch">
    <skipped/>
  </testcase> <!-- searchCourseCreateInviteOnlyBatch -->
  <testcase name="createCollectionAndVerify" time="0.002" classname="org.testscript.creator.CreateCollectionAndVerify">
    <skipped/>
  </testcase> <!-- createCollectionAndVerify -->
  <testcase name="createCourseAndVerify" time="0.004" classname="org.testscript.creator.CreateCourseAndVerify">
    <skipped/>
  </testcase> <!-- createCourseAndVerify -->
  <testcase name="openAnnouncement" time="0.0" classname="org.testscript.announcementsender.OpenAnnouncement">
    <ignored/>
  </testcase> <!-- openAnnouncement -->
  <testcase name="deletePublishedUploadContentFromAllMyContent" time="0.0" classname="org.testscript.creator.DeletePublishedUploadContentFromAllMyContent">
    <ignored/>
  </testcase> <!-- deletePublishedUploadContentFromAllMyContent -->
  <testcase name="verifyPublishButtonAndPublishCourse" time="0.0" classname="org.testscript.reviewer.VerifyPublishButtonAndPublishCourse">
    <ignored/>
  </testcase> <!-- verifyPublishButtonAndPublishCourse -->
  <testcase name="searchCourse" time="0.0" classname="org.testscript.publicuser.SearchCourse">
    <ignored/>
  </testcase> <!-- searchCourse -->
  <testcase name="updateProfilePhoto" time="0.0" classname="org.testscript.skippedfunctionality.UpdateProfilePhoto">
    <ignored/>
  </testcase> <!-- updateProfilePhoto -->
  <testcase name="createIOBatchWithStartDateAsCurrentDate" time="0.0" classname="org.testscript.mentor.CreateIOBatchWithStartDateAsCurrentDate">
    <ignored/>
  </testcase> <!-- createIOBatchWithStartDateAsCurrentDate -->
  <testcase name="verifyUserNavigateToContentEditorPage" time="0.0" classname="org.testscript.creator.VerifyUserNaviagationToContentEditor">
    <ignored/>
  </testcase> <!-- verifyUserNavigateToContentEditorPage -->
  <testcase name="verifyTheSorting" time="0.0" classname="org.testscript.creator.VerifyTheSorting">
    <ignored/>
  </testcase> <!-- verifyTheSorting -->
  <testcase name="verifySortOption" time="0.0" classname="org.testscript.creator.VerifySortOption">
    <ignored/>
  </testcase> <!-- verifySortOption -->
  <testcase name="resourceCreation" time="0.0" classname="org.testscript.creator.ResourceCreation">
    <ignored/>
  </testcase> <!-- resourceCreation -->
  <testcase name="searchCourseUsingFilter" time="0.0" classname="org.testscript.publicuser.SearchCourseUsingFilter">
    <ignored/>
  </testcase> <!-- searchCourseUsingFilter -->
  <testcase name="sendForReviewContentUnderReviewSubmission" time="0.0" classname="org.testscript.creator.SendForReviewContentUnderReviewSubmission">
    <ignored/>
  </testcase> <!-- sendForReviewContentUnderReviewSubmission -->
  <testcase name="checkInReviewSubmission" time="0.0" classname="org.testscript.creator.CheckInReviewSubmission">
    <ignored/>
  </testcase> <!-- checkInReviewSubmission -->
  <testcase name="TC_305_rootOrg" time="0.0" classname="org.testscript.regression_removed.TC_305">
    <ignored/>
  </testcase> <!-- TC_305_rootOrg -->
  <testcase name="checkForAuthenticUserInMentor" time="0.0" classname="org.testscript.mentor.CheckForAuthenticUserInMentor">
    <ignored/>
  </testcase> <!-- checkForAuthenticUserInMentor -->
  <testcase name="verifycopyContent" time="0.0" classname="org.testscript.creator.VerifycopyContent">
    <ignored/>
  </testcase> <!-- verifycopyContent -->
  <testcase name="uploadSubOrgUsers" time="0.0" classname="org.testscript.skippedfunctionality.UploadSubOrgUsersWithOrgId">
    <ignored/>
  </testcase> <!-- uploadSubOrgUsers -->
  <testcase name="resource_VerifyAudioUpload" time="0.0" classname="org.testscript.creator.CreateResourceByAddingAudio">
    <ignored/>
  </testcase> <!-- resource_VerifyAudioUpload -->
  <testcase name="uploadRootOrgUsers" time="0.0" classname="org.testscript.skippedfunctionality.UploadRootOrgUsersWithOrgId">
    <ignored/>
  </testcase> <!-- uploadRootOrgUsers -->
  <testcase name="verify_NavigateToGetStarted_ExploreSunbirdPage" time="0.0" classname="org.testscript.publicuser.NavigateToGetStartedAndExploreSunbird">
    <ignored/>
  </testcase> <!-- verify_NavigateToGetStarted_ExploreSunbirdPage -->
  <testcase name="VerifyAnnouncementDetails" time="0.0" classname="org.testscript.announcementsender.VerifyAnnouncementPageContent">
    <ignored/>
  </testcase> <!-- VerifyAnnouncementDetails -->
  <testcase name="questionTemplateFillInTheBlankCustom" time="0.0" classname="org.testscript.creator.QuestionTemplateFillInTheBlankCustom">
    <ignored/>
  </testcase> <!-- questionTemplateFillInTheBlankCustom -->
  <testcase name="verifyAnnouncementMessage" time="0.0" classname="org.testscript.announcementsender.VerifyAnnouncementPageContent">
    <ignored/>
  </testcase> <!-- verifyAnnouncementMessage -->
  <testcase name="deleteByStatusInAllMyContent" time="0.0" classname="org.testscript.creator.DeleteContentByStatusInAllMyContent">
    <ignored/>
  </testcase> <!-- deleteByStatusInAllMyContent -->
  <testcase name="bookCreateOptionValidation" time="0.0" classname="org.testscript.creator.BookCreateOptionValidation">
    <ignored/>
  </testcase> <!-- bookCreateOptionValidation -->
  <testcase name="savedContentUnderAllUploads" time="0.0" classname="org.testscript.creator.SavedContentUnderAllUploads">
    <ignored/>
  </testcase> <!-- savedContentUnderAllUploads -->
  <testcase name="navigateToMyActivity" time="0.0" classname="org.testscript.admin.NavigateToMyActivity">
    <ignored/>
  </testcase> <!-- navigateToMyActivity -->
  <testcase name="verifyCreateAnnouncementPopupAndFeatures" time="0.0" classname="org.testscript.announcementsender.VerifyCreateAnnouncementPopupAndFeatures">
    <ignored/>
  </testcase> <!-- verifyCreateAnnouncementPopupAndFeatures -->
  <testcase name="searchInLibrary" time="0.0" classname="org.testscript.publicuser.SearchInLibrary">
    <ignored/>
  </testcase> <!-- searchInLibrary -->
  <testcase name="contentValidationInUpForReviewSearchWithFilter" time="0.0" classname="org.testscript.reviewer.ContentValidationInUpForReviewSearchWithFilter">
    <ignored/>
  </testcase> <!-- contentValidationInUpForReviewSearchWithFilter -->
  <testcase name="TC_296_rootOrg" time="0.0" classname="org.testscript.regression_removed.TC_296">
    <ignored/>
  </testcase> <!-- TC_296_rootOrg -->
  <testcase name="acceptAsflagReviewer" time="0.0" classname="org.testscript.skippedfunctionality.AcceptAsflagReviewer">
    <ignored/>
  </testcase> <!-- acceptAsflagReviewer -->
  <testcase name="searchInLibraryUsingFilter" time="0.0" classname="org.testscript.publicuser.SearchInLibraryUsingFilter">
    <ignored/>
  </testcase> <!-- searchInLibraryUsingFilter -->
  <testcase name="characterVerificationInPreviewKeyboard" time="0.0" classname="org.testscript.creator.CreateResourcePublishAndDeleteFromLimitedPublising">
    <ignored/>
  </testcase> <!-- characterVerificationInPreviewKeyboard -->
  <testcase name="editAndResendTheExistingAnnouncement" time="0.0" classname="org.testscript.creator.EditAndResendTheExistingAnnouncement">
    <ignored/>
  </testcase> <!-- editAndResendTheExistingAnnouncement -->
  <testcase name="adminCreationAndDownloadCsv" time="0.0" classname="org.testscript.admin.AdminCreationAndDownloadCsv">
    <ignored/>
  </testcase> <!-- adminCreationAndDownloadCsv -->
  <testcase name="navigateToPublishedAndDeleteAll" time="0.0" classname="org.testscript.creator.DeleteAllContents">
    <ignored/>
  </testcase> <!-- navigateToPublishedAndDeleteAll -->
  <testcase name="courseCreation" time="0.0" classname="org.testscript.creator.CourseCreation">
    <ignored/>
  </testcase> <!-- courseCreation -->
  <testcase name="navigateToAnnouncementDashboard" time="0.0" classname="org.testscript.announcementsender.NavigateToAnnouncementDashboard">
    <ignored/>
  </testcase> <!-- navigateToAnnouncementDashboard -->
  <testcase name="changeTheContentAfterFlagged" time="0.0" classname="org.testscript.skippedfunctionality.ChangeTheContentAfterFlagged">
    <ignored/>
  </testcase> <!-- changeTheContentAfterFlagged -->
  <testcase name="editAndResendAnnouncement" time="0.0" classname="org.testscript.creator.EditAndResendAnnouncement">
    <ignored/>
  </testcase> <!-- editAndResendAnnouncement -->
  <testcase name="verifyWorkspaceEditailsPage_TopicTree" time="0.0" classname="org.testscript.creator.VerifyEditDetailsPopupAndTopicTree">
    <ignored/>
  </testcase> <!-- verifyWorkspaceEditailsPage_TopicTree -->
  <testcase name="limitedSharingAndDeletingLessonPlan" time="0.0" classname="org.testscript.creator.LimitedSharingAndDeletingLessonPlan">
    <ignored/>
  </testcase> <!-- limitedSharingAndDeletingLessonPlan -->
  <testcase name="verifyPublishedBucket" time="0.0" classname="org.testscript.creator.VerifyPublishedBucket">
    <ignored/>
  </testcase> <!-- verifyPublishedBucket -->
  <testcase name="navigateToMyActivityInDropdown" time="0.0" classname="org.testscript.mentor.NavigateToMyActivityInDropdown">
    <ignored/>
  </testcase> <!-- navigateToMyActivityInDropdown -->
  <testcase name="subOrgUsersProviderAndExtId" time="0.0" classname="org.testscript.skippedfunctionality.SubOrgUsersProviderAndExtId">
    <ignored/>
  </testcase> <!-- subOrgUsersProviderAndExtId -->
  <testcase name="verifyCreateAnnouncementFeature" time="0.0" classname="org.testscript.announcementsender.VerifyCreateAnnouncementFeature">
    <ignored/>
  </testcase> <!-- verifyCreateAnnouncementFeature -->
  <testcase name="verifyCopyContent_Library" time="0.0" classname="org.testscript.creator.CopyContentFromLibraryAndVerify">
    <ignored/>
  </testcase> <!-- verifyCopyContent_Library -->
  <testcase name="rejectTheContent" time="0.0" classname="org.testscript.reviewer.RejectTheContent">
    <ignored/>
  </testcase> <!-- rejectTheContent -->
  <testcase name="enrollToCourseInOpenBatch" time="0.0" classname="org.testscript.mentor.EnrollToCourseInOpenBatch">
    <ignored/>
  </testcase> <!-- enrollToCourseInOpenBatch -->
  <testcase name="searchLessonPlanAndCopy" time="0.0" classname="org.testscript.creator.SearchLessonPlanAndCopy">
    <ignored/>
  </testcase> <!-- searchLessonPlanAndCopy -->
  <testcase name="deletePublishedCollectionFromAllMyContent" time="0.0" classname="org.testscript.creator.DeletePublishedCollectionFromAllMyContent">
    <ignored/>
  </testcase> <!-- deletePublishedCollectionFromAllMyContent -->
  <testcase name="searchAndDownloadOrgFile" time="0.0" classname="org.testscript.skippedfunctionality.SearchAndDownloadOrgFile">
    <ignored/>
  </testcase> <!-- searchAndDownloadOrgFile -->
  <testcase name="verifyAddingActivityFunctionality" time="0.0" classname="org.testscript.creator.CreateResourceByUploadingVideoAndActivityPlugins">
    <ignored/>
  </testcase> <!-- verifyAddingActivityFunctionality -->
  <testcase name="resendAnnouncement" time="0.0" classname="org.testscript.announcementsender.ResendAnnouncement">
    <ignored/>
  </testcase> <!-- resendAnnouncement -->
  <testcase name="skillEndorsement" time="0.0" classname="org.testscript.skippedfunctionality.SkillEndorsement">
    <ignored/>
  </testcase> <!-- skillEndorsement -->
  <testcase name="verifySaveAndSendLessonPlanForReview" time="0.0" classname="org.testscript.creator.VerifySaveAndSendLessonPlanForReview">
    <ignored/>
  </testcase> <!-- verifySaveAndSendLessonPlanForReview -->
  <testcase name="verifyTheBookAvailableForReview" time="0.0" classname="org.testscript.creator.VerifyTheBookAvailableForReview">
    <ignored/>
  </testcase> <!-- verifyTheBookAvailableForReview -->
  <testcase name="createIOBatchByAddingMembersAndMentorsFromRootAndSubOrg" time="0.0" classname="org.testscript.mentor.CreateIOBatchByAddingMembersAndMentorsFromRootAndSubOrg">
    <ignored/>
  </testcase> <!-- createIOBatchByAddingMembersAndMentorsFromRootAndSubOrg -->
  <testcase name="verifyThatTopicsAreSelectedOnMetaDataPage" time="0.0" classname="org.testscript.creator.VerifyThatTopicsAreSelectedOnMetaDataPage">
    <ignored/>
  </testcase> <!-- verifyThatTopicsAreSelectedOnMetaDataPage -->
  <testcase name="verify_PageAccessOnLogin" time="0.0" classname="org.testscript.publicuser.AccessOnAllPagesAfterLogin">
    <ignored/>
  </testcase> <!-- verify_PageAccessOnLogin -->
  <testcase name="bookCreation" time="0.0" classname="org.testscript.creator.BookCreation">
    <ignored/>
  </testcase> <!-- bookCreation -->
  <testcase name="createLessonAndVerify" time="0.0" classname="org.testscript.creator.LessonplanCreation">
    <ignored/>
  </testcase> <!-- createLessonAndVerify -->
  <testcase name="checkForDownloadButtonAvailabilityForUserInProfile" time="0.0" classname="org.testscript.skippedfunctionality.CheckForDownloadButtonAvailabilityForUserInProfile">
    <ignored/>
  </testcase> <!-- checkForDownloadButtonAvailabilityForUserInProfile -->
  <testcase name="checkCourseStatAsMentor" time="0.0" classname="org.testscript.mentor.CheckCourseStatAsMentor">
    <ignored/>
  </testcase> <!-- checkCourseStatAsMentor -->
  <testcase name="createIOBatchAndSearchTheCourseAsInvitedMember" time="0.0" classname="org.testscript.mentor.CreateIOBatchAndSearchTheCourseAsInvitedMember">
    <ignored/>
  </testcase> <!-- createIOBatchAndSearchTheCourseAsInvitedMember -->
  <testcase name="verifyProfileIcon4Features_workspaceFeatures" time="0.0" classname="org.testscript.creator.VerifyFeaturesOfProfileIconAndWorkspace">
    <ignored/>
  </testcase> <!-- verifyProfileIcon4Features_workspaceFeatures -->
  <testcase name="TC_295_rootOrg" time="0.0" classname="org.testscript.regression_removed.TC_295">
    <ignored/>
  </testcase> <!-- TC_295_rootOrg -->
  <testcase name="questionSetPlugin" time="0.0" classname="org.testscript.creator.AllQuestionSetPlugins">
    <ignored/>
  </testcase> <!-- questionSetPlugin -->
  <testcase name="collectionCreation" time="0.0" classname="org.testscript.creator.CollectionCreation">
    <ignored/>
  </testcase> <!-- collectionCreation -->
  <testcase name="searchTheContentInUpForReview" time="0.0" classname="org.testscript.creator.SearchTheContentInUpForReview">
    <ignored/>
  </testcase> <!-- searchTheContentInUpForReview -->
  <testcase name="limitedSharingTheContent" time="0.0" classname="org.testscript.creator.LimitedSharingTheContent">
    <ignored/>
  </testcase> <!-- limitedSharingTheContent -->
  <testcase name="dialCodeLink" time="0.0" classname="org.testscript.creator.DialCodeLink">
    <ignored/>
  </testcase> <!-- dialCodeLink -->
  <testcase name="workspaceCollection_verifyEditDetailsPage" time="0.0" classname="org.testscript.creator.VerifyEditMetadataPageForCollection">
    <ignored/>
  </testcase> <!-- workspaceCollection_verifyEditDetailsPage -->
  <testcase name="TC_302_rootOrg" time="0.0" classname="org.testscript.regression_removed.TC_302">
    <ignored/>
  </testcase> <!-- TC_302_rootOrg -->
  <testcase name="verifyBookCreator" time="0.0" classname="org.testscript.creator.VerifyBookCreator">
    <ignored/>
  </testcase> <!-- verifyBookCreator -->
  <testcase name="deletePublishedLessonPlanFromAllMyContent" time="0.0" classname="org.testscript.creator.DeletePublishedLessonPlanFromAllMyContent">
    <ignored/>
  </testcase> <!-- deletePublishedLessonPlanFromAllMyContent -->
  <testcase name="toVerifyUpdatingOfOngoingBatchForSearchedCourse" time="0.0" classname="org.testscript.mentor.ToVerifyUpdatingOfOngoingBatchForSearchedCourse">
    <ignored/>
  </testcase> <!-- toVerifyUpdatingOfOngoingBatchForSearchedCourse -->
  <testcase name="rootUsersProviderAndExtID" time="0.0" classname="org.testscript.skippedfunctionality.UploadRootOrgUsersWithProviderAndExtID">
    <ignored/>
  </testcase> <!-- rootUsersProviderAndExtID -->
  <testcase name="discardAsFlagReviewer" time="0.0" classname="org.testscript.skippedfunctionality.DiscardAsFlagReviewer">
    <ignored/>
  </testcase> <!-- discardAsFlagReviewer -->
  <testcase name="resendAnnouncementAndVerifyAsReciever" time="0.0" classname="org.testscript.announcementsender.ResendAnnouncementAndVerifyAsReciever">
    <ignored/>
  </testcase> <!-- resendAnnouncementAndVerifyAsReciever -->
  <testcase name="editAndVerifyTopicTree" time="0.0" classname="org.testscript.creator.EditAndVerifyTopicTree">
    <ignored/>
  </testcase> <!-- editAndVerifyTopicTree -->
  <testcase name="flagTheContentAsPublicUser" time="0.0" classname="org.testscript.skippedfunctionality.FlagTheContentAsPublicUser">
    <ignored/>
  </testcase> <!-- flagTheContentAsPublicUser -->
  <testcase name="verifyAppliedFilter" time="0.0" classname="org.testscript.reviewer.VerifyAppliedFilter">
    <ignored/>
  </testcase> <!-- verifyAppliedFilter -->
  <testcase name="verifySaveContentInAllUploads" time="0.0" classname="org.testscript.creator.VerifySaveContentInAllUploads">
    <ignored/>
  </testcase> <!-- verifySaveContentInAllUploads -->
  <testcase name="verifyCreatedInviteOnlybatch" time="0.0" classname="org.testscript.mentor.VerifyCreatedInviteOnlybatch">
    <ignored/>
  </testcase> <!-- verifyCreatedInviteOnlybatch -->
  <testcase name="consumeCourseByInvitedMember" time="0.0" classname="org.testscript.mentor.ConsumeCourseByInvitedMember">
    <ignored/>
  </testcase> <!-- consumeCourseByInvitedMember -->
  <testcase name="confirmInstructionReceivedInforgotPassword" time="0.0" classname="org.testscript.publicuser.ConfirmInstructionReceivedInforgotPassword">
    <ignored/>
  </testcase> <!-- confirmInstructionReceivedInforgotPassword -->
  <testcase name="uploadContentSaveAndSendForReview" time="0.0" classname="org.testscript.creator.UploadContentSaveAndSendForReview">
    <ignored/>
  </testcase> <!-- uploadContentSaveAndSendForReview -->
  <testcase name="createResourceWithContentsPlugins_VerifyContentEditor" time="0.0" classname="org.testscript.creator.CreateResourceWithContentsPluginsAndVerifyContentEditor">
    <ignored/>
  </testcase> <!-- createResourceWithContentsPlugins_VerifyContentEditor -->
  <testcase name="reviewAndPublishReceivedContent" time="0.0" classname="org.testscript.reviewer.ReviewAndPublishReceivedContent">
    <ignored/>
  </testcase> <!-- reviewAndPublishReceivedContent -->
  <testcase name="verifyLimitedSharing" time="0.0" classname="org.testscript.creator.VerifyLimitedSharing">
    <ignored/>
  </testcase> <!-- verifyLimitedSharing -->
  <testcase name="suborgMentorInvitingOrgMember" time="0.0" classname="org.testscript.mentor.CheckSuborgMentorInvitingOrgMember">
    <ignored/>
  </testcase> <!-- suborgMentorInvitingOrgMember -->
  <testcase name="profileInfoUpdate" time="0.0" classname="org.testscript.publicuser.ProfileInfoUpdate">
    <ignored/>
  </testcase> <!-- profileInfoUpdate -->
  <testcase name="TC_338_announcement_feature" time="0.0" classname="org.testscript.regression_removed.TC_338">
    <ignored/>
  </testcase> <!-- TC_338_announcement_feature -->
  <testcase name="navigateToWorkspaceAndSelectPreviousBatches" time="0.0" classname="org.testscript.mentor.NavigateToWorkspaceAndSelectPreviousBatches">
    <ignored/>
  </testcase> <!-- navigateToWorkspaceAndSelectPreviousBatches -->
  <testcase name="checkUpForReviewAsFlagReviewer" time="0.0" classname="org.testscript.skippedfunctionality.CheckUpForReviewAsFlagReviewer">
    <ignored/>
  </testcase> <!-- checkUpForReviewAsFlagReviewer -->
  <testcase name="subOrgUsersProviderAndExtId" time="0.0" classname="org.testscript.skippedfunctionality.UploadSubOrgUsersWithProviderAndExtId">
    <ignored/>
  </testcase> <!-- subOrgUsersProviderAndExtId -->
  <testcase name="deleteAnnouncement" time="0.0" classname="org.testscript.announcementsender.DeleteAnnouncement">
    <ignored/>
  </testcase> <!-- deleteAnnouncement -->
  <testcase name="updateBatchAsInvitedMentor" time="0.0" classname="org.testscript.mentor.UpdateBatchAsInvitedMentor">
    <ignored/>
  </testcase> <!-- updateBatchAsInvitedMentor -->
  <testcase name="searchOrgsAsAdmin" time="0.0" classname="org.testscript.skippedfunctionality.SearchOrgsAsAdmin">
    <ignored/>
  </testcase> <!-- searchOrgsAsAdmin -->
  <testcase name="verifyPropertySectionAndPreviewSlides" time="0.0" classname="org.testscript.creator.VerifyPropertySectionAndPreviewSlides">
    <ignored/>
  </testcase> <!-- verifyPropertySectionAndPreviewSlides -->
  <testcase name="createIOBatchWithStartDateAsFutureDate" time="0.0" classname="org.testscript.mentor.CreateIOBatchWithStartDateAsFutureDate">
    <ignored/>
  </testcase> <!-- createIOBatchWithStartDateAsFutureDate -->
  <testcase name="createVerifyAndDeleteAnnouncement" time="0.0" classname="org.testscript.announcementsender.CreateVerifyAndDeleteAnnouncement">
    <ignored/>
  </testcase> <!-- createVerifyAndDeleteAnnouncement -->
  <testcase name="verifyUploadAndDownloadContent" time="0.0" classname="org.testscript.creator.VerifyUploadAndDownloadContent">
    <ignored/>
  </testcase> <!-- verifyUploadAndDownloadContent -->
  <testcase name="verifyLatestContentOnTopForReviewer" time="0.0" classname="org.testscript.reviewer.VerifyLatestContentOnTopForReviewer">
    <ignored/>
  </testcase> <!-- verifyLatestContentOnTopForReviewer -->
  <testcase name="verify_SignUpFailure" time="0.0" classname="org.testscript.publicuser.SameUserNameIsNotAllowedWhileSignup">
    <ignored/>
  </testcase> <!-- verify_SignUpFailure -->
  <testcase name="checkTheflaggedContentINDraft" time="0.0" classname="org.testscript.skippedfunctionality.CheckTheflaggedContentINDraft">
    <ignored/>
  </testcase> <!-- checkTheflaggedContentINDraft -->
  <testcase name="uploadSubOrg" time="0.0" classname="org.testscript.skippedfunctionality.UploadSubOrg">
    <ignored/>
  </testcase> <!-- uploadSubOrg -->
  <testcase name="TC_301_rootOrg" time="0.0" classname="org.testscript.regression_removed.TC_301">
    <ignored/>
  </testcase> <!-- TC_301_rootOrg -->
  <testcase name="contentCreator_CloseEditor" time="0.0" classname="org.testscript.creator.VerifyTheClosingOfContentEditor">
    <ignored/>
  </testcase> <!-- contentCreator_CloseEditor -->
  <testcase name="verifyReviewerRequestChangesTheBook" time="0.0" classname="org.testscript.reviewer.VerifyReviewerRequestChangesTheBook">
    <ignored/>
  </testcase> <!-- verifyReviewerRequestChangesTheBook -->
  <testcase name="createBookAndVerifyOnlyBooksPresent" time="0.0" classname="org.testscript.creator.CreateBookAndVerifyOnlyBooksPresent">
    <ignored/>
  </testcase> <!-- createBookAndVerifyOnlyBooksPresent -->
  <testcase name="deletePublishedCourseFromAllMyContent" time="0.0" classname="org.testscript.creator.DeletePublishedCourseFromAllMyContent">
    <ignored/>
  </testcase> <!-- deletePublishedCourseFromAllMyContent -->
  <testcase name="verifyMyactivityLinkInProfileDropdown" time="0.0" classname="org.testscript.creator.VerifyMyActivityLinkInProfileDropdown">
    <ignored/>
  </testcase> <!-- verifyMyactivityLinkInProfileDropdown -->
  <testcase name="searchUsers" time="0.0" classname="org.testscript.publicuser.SearchUsers">
    <ignored/>
  </testcase> <!-- searchUsers -->
  <testcase name="TC_304_rootOrg" time="0.0" classname="org.testscript.regression_removed.TC_304">
    <ignored/>
  </testcase> <!-- TC_304_rootOrg -->
  <testcase name="mentorCreateCourseAndCreateOpenBatchForIt" time="0.0" classname="org.testscript.mentor.MentorCreateCourseAndCreateOpenBatchForIt">
    <ignored/>
  </testcase> <!-- mentorCreateCourseAndCreateOpenBatchForIt -->
  <testcase name="verify_NavigateToGetStarted_ExploreDikshaPage" time="0.0" classname="org.testscript.publicuser.NavigateToGetStartedAndExploreDiksha">
    <ignored/>
  </testcase> <!-- verify_NavigateToGetStarted_ExploreDikshaPage -->
  <testcase name="rootUsersProviderAndExtID" time="0.0" classname="org.testscript.skippedfunctionality.RootUsersProviderAndExtID">
    <ignored/>
  </testcase> <!-- rootUsersProviderAndExtID -->
  <testcase name="verifyEditDetailsForLessonPlan" time="0.0" classname="org.testscript.creator.VerifyEditDetailsForLessonPlan">
    <ignored/>
  </testcase> <!-- verifyEditDetailsForLessonPlan -->
  <testcase name="adminConsumptionAndDownloadCsv" time="0.0" classname="org.testscript.skippedfunctionality.AdminConsumptionAndDownloadCsv">
    <ignored/>
  </testcase> <!-- adminConsumptionAndDownloadCsv -->
  <testcase name="verifyUploadingVideo_AddingActivity" time="0.0" classname="org.testscript.creator.CreateResourceByUploadingVideoAndActivityPlugins">
    <ignored/>
  </testcase> <!-- verifyUploadingVideo_AddingActivity -->
  <testcase name="workspace_upForReviewSortBy" time="0.0" classname="org.testscript.reviewer.SortTheResultInUpForReview">
    <ignored/>
  </testcase> <!-- workspace_upForReviewSortBy -->
  <testcase name="verifyPublishedContentInPublishedBucket" time="0.0" classname="org.testscript.reviewer.PublishTheContent">
    <ignored/>
  </testcase> <!-- verifyPublishedContentInPublishedBucket -->
  <testcase name="verifySortByInUpForReview" time="0.0" classname="org.testscript.reviewer.VerifySortByInUpForReview">
    <ignored/>
  </testcase> <!-- verifySortByInUpForReview -->
  <testcase name="loginAndChangePassword" time="0.0" classname="org.testscript.publicuser.LoginAndChangePassword">
    <ignored/>
  </testcase> <!-- loginAndChangePassword -->
  <testcase name="latestContentIsOnTopUpForReviewAndSearch" time="0.0" classname="org.testscript.reviewer.LatestContentOnTopOfUpForReviewAndSearch">
    <ignored/>
  </testcase> <!-- latestContentIsOnTopUpForReviewAndSearch -->
  <testcase name="VerifySortFeatureOptions" time="0.0" classname="org.testscript.creator.SearchParticularContentInAllMyContent">
    <ignored/>
  </testcase> <!-- VerifySortFeatureOptions -->
  <testcase name="addChildNodesToLessonPlan" time="0.0" classname="org.testscript.creator.AddChildNodesToLessonPlan">
    <ignored/>
  </testcase> <!-- addChildNodesToLessonPlan -->
  <testcase name="checkAvailabilityOfCourseForInvitedMember" time="0.0" classname="org.testscript.mentor.CheckAvailabilityOfCourseForInvitedMember">
    <ignored/>
  </testcase> <!-- checkAvailabilityOfCourseForInvitedMember -->
  <testcase name="verifyAllMyContentSortByForCreator" time="0.0" classname="org.testscript.creator.VerifySortByInAllMyContentForCreator">
    <ignored/>
  </testcase> <!-- verifyAllMyContentSortByForCreator -->
  <testcase name="TC_303_rootOrg" time="0.0" classname="org.testscript.regression_removed.TC_303">
    <ignored/>
  </testcase> <!-- TC_303_rootOrg -->
  <testcase name="verifyCourseCanBePreviewed" time="0.0" classname="org.testscript.creator.VerifyCourseCanBePreviewed">
    <ignored/>
  </testcase> <!-- verifyCourseCanBePreviewed -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="@AfterSuite generateExcelReportFromTestngresult" time="0.0" classname="org.startup.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite generateExcelReportFromTestngresult -->
  <testcase name="verifyPublishedContentInPublishedBucket" time="0.0" classname="org.testscript.creator.VerifyPublishedContentInPublishedBucket">
    <ignored/>
  </testcase> <!-- verifyPublishedContentInPublishedBucket -->
  <testcase name="verifyMembersAutoInvitatedInInviteOnlyBatch" time="0.0" classname="org.testscript.mentor.VerifyMembersAutoInvitatedInInviteOnlyBatch">
    <ignored/>
  </testcase> <!-- verifyMembersAutoInvitatedInInviteOnlyBatch -->
  <testcase name="sendTheCourseForReview" time="0.0" classname="org.testscript.creator.SendTheCourseForReview">
    <ignored/>
  </testcase> <!-- sendTheCourseForReview -->
  <testcase name="openBatchCreation" time="0.0" classname="org.testscript.mentor.OpenBatchCreation">
    <ignored/>
  </testcase> <!-- openBatchCreation -->
  <testcase name="rejectTheUploadedContent" time="0.0" classname="org.testscript.reviewer.RejectTheUploadedContent">
    <ignored/>
  </testcase> <!-- rejectTheUploadedContent -->
  <testcase name="consumeOpenCourseByPublicUserAndCheckCourseStatAsMentor" time="0.0" classname="org.testscript.mentor.ConsumeOpenCourseByPublicUserAndCheckCourseStatAsMentor">
    <ignored/>
  </testcase> <!-- consumeOpenCourseByPublicUserAndCheckCourseStatAsMentor -->
  <testcase name="verify_NavigateToGetPage" time="0.0" classname="org.testscript.publicuser.VerifyNavigateToGetPage">
    <ignored/>
  </testcase> <!-- verify_NavigateToGetPage -->
  <testcase name="seeTheContentBasedOnAppliedFilter" time="0.0" classname="org.testscript.creator.SeeTheContentBasedOnAppliedFilter">
    <ignored/>
  </testcase> <!-- seeTheContentBasedOnAppliedFilter -->
  <testcase name="verifyThatTopicsAreDisplayedOnMetaDataForm" time="0.0" classname="org.testscript.creator.VerifyThatTopicsAreDisplayedOnMetaDataForm">
    <ignored/>
  </testcase> <!-- verifyThatTopicsAreDisplayedOnMetaDataForm -->
  <testcase name="deletePublishedResourcesFromAllMyContent" time="0.0" classname="org.testscript.creator.DeletePublishedResourcesFromAllMyContent">
    <ignored/>
  </testcase> <!-- deletePublishedResourcesFromAllMyContent -->
  <testcase name="searchContentWithFiltersAsReviewer" time="0.0" classname="org.testscript.reviewer.SearchContentWithFiltersAsReviewer">
    <ignored/>
  </testcase> <!-- searchContentWithFiltersAsReviewer -->
  <testcase name="createResourceWithMcqQuestion" time="0.0" classname="org.testscript.creator.CreateResourceWithMCQQuestionSet">
    <ignored/>
  </testcase> <!-- createResourceWithMcqQuestion -->
  <testcase name="workspace_LimitedPublishing" time="0.0" classname="org.testscript.creator.LimitedSharedContentInLimitedSharingSection">
    <ignored/>
  </testcase> <!-- workspace_LimitedPublishing -->
  <testcase name="createAnnouncementWithAttachment" time="0.0" classname="org.testscript.announcementsender.CreateAnnouncementWithAttachment">
    <ignored/>
  </testcase> <!-- createAnnouncementWithAttachment -->
  <testcase name="deletePublishedBookFromAllMyContent" time="0.0" classname="org.testscript.creator.DeletePublishedBookFromAllMyContent">
    <ignored/>
  </testcase> <!-- deletePublishedBookFromAllMyContent -->
  <testcase name="editContentAndSendForReview" time="0.0" classname="org.testscript.creator.EditContentAndSendForReview">
    <ignored/>
  </testcase> <!-- editContentAndSendForReview -->
  <testcase name="createLessonPlanWith3Resources" time="0.0" classname="org.testscript.creator.CreateLessonPlanWith3Resources">
    <ignored/>
  </testcase> <!-- createLessonPlanWith3Resources -->
  <testcase name="unlinkDailcode" time="0.0" classname="org.testscript.creator.UnlinkDailcode">
    <ignored/>
  </testcase> <!-- unlinkDailcode -->
  <testcase name="VerifyAnnouncementCreationFields" time="0.0" classname="org.testscript.announcementsender.VerifyAnnouncementPageContent">
    <ignored/>
  </testcase> <!-- VerifyAnnouncementCreationFields -->
  <testcase name="verifyFiltersCanBeAppliedInUpForReview" time="0.0" classname="org.testscript.reviewer.VerifyFiltersCanBeAppliedInUpForReview">
    <ignored/>
  </testcase> <!-- verifyFiltersCanBeAppliedInUpForReview -->
  <testcase name="toVerifyUpdatingOfUpcomingBatchForSearchedCourse" time="0.0" classname="org.testscript.mentor.ToVerifyUpdatingOfUpcomingBatchForSearchedCourse">
    <ignored/>
  </testcase> <!-- toVerifyUpdatingOfUpcomingBatchForSearchedCourse -->
  <testcase name="verifyHomePage" time="0.0" classname="org.testscript.skippedfunctionality.VerifyHomePage">
    <ignored/>
  </testcase> <!-- verifyHomePage -->
  <testcase name="verifyContentInUpForReview" time="0.0" classname="org.testscript.creator.VerifyContentInUpForReview">
    <ignored/>
  </testcase> <!-- verifyContentInUpForReview -->
  <testcase name="TC_306_rootOrg" time="0.0" classname="org.testscript.regression_removed.TC_306">
    <ignored/>
  </testcase> <!-- TC_306_rootOrg -->
  <testcase name="verifyElementsInAdminDashboard" time="0.0" classname="org.testscript.admin.VerifyElementsInAdminDashboard">
    <ignored/>
  </testcase> <!-- verifyElementsInAdminDashboard -->
  <testcase name="verifyTheUploadedContent" time="0.0" classname="org.testscript.creator.VerifyTheUploadedContent">
    <ignored/>
  </testcase> <!-- verifyTheUploadedContent -->
  <testcase name="verifyFilledDataWhileCreatingAnnouncement" time="0.0" classname="org.testscript.announcementsender.VerifyFilledDataWhileCreatingAnnouncement">
    <ignored/>
  </testcase> <!-- verifyFilledDataWhileCreatingAnnouncement -->
</testsuite> <!-- Testing -->

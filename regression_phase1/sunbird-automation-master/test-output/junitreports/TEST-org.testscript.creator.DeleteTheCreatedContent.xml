<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite name="org.testscript.creator.DeleteTheCreatedContent" tests="1" time="4.765" ignored="341" failures="0" timestamp="11 Jan 2019 07:47:56 GMT" skipped="1" hostname="qualitrix-Inspiron-3521" errors="0">
  <testcase name="deleteTheCreatedContent" time="4.765" classname="org.testscript.creator.DeleteTheCreatedContent">
    <skipped/>
  </testcase> <!-- deleteTheCreatedContent -->
  <testcase name="navigateToWorkspaceAndSelectPreviousBatches" classname="org.testscript.mentor.NavigateToWorkspaceAndSelectPreviousBatches">
    <skipped/>
  </testcase> <!-- navigateToWorkspaceAndSelectPreviousBatches -->
  <testcase name="rootUsersProviderAndExtID" classname="org.testscript.skippedfunctionality.RootUsersProviderAndExtID">
    <skipped/>
  </testcase> <!-- rootUsersProviderAndExtID -->
  <testcase name="searchTheContentInUpForReview" classname="org.testscript.creator.SearchTheContentInUpForReview">
    <skipped/>
  </testcase> <!-- searchTheContentInUpForReview -->
  <testcase name="TC_338_announcement_feature" classname="org.testscript.regression_removed.TC_338">
    <skipped/>
  </testcase> <!-- TC_338_announcement_feature -->
  <testcase name="TC_296_rootOrg" classname="org.testscript.regression_removed.TC_296">
    <skipped/>
  </testcase> <!-- TC_296_rootOrg -->
  <testcase name="createIOBatchByAddingMembersAndMentorsFromRootAndSubOrg" classname="org.testscript.mentor.CreateIOBatchByAddingMembersAndMentorsFromRootAndSubOrg">
    <skipped/>
  </testcase> <!-- createIOBatchByAddingMembersAndMentorsFromRootAndSubOrg -->
  <testcase name="rejectTheUploadedContent" classname="org.testscript.reviewer.RejectTheUploadedContent">
    <skipped/>
  </testcase> <!-- rejectTheUploadedContent -->
  <testcase name="editAndVerifyTopicTree" classname="org.testscript.creator.EditAndVerifyTopicTree">
    <skipped/>
  </testcase> <!-- editAndVerifyTopicTree -->
  <testcase name="createAnnouncementWithAttachment" classname="org.testscript.announcementsender.CreateAnnouncementWithAttachment">
    <skipped/>
  </testcase> <!-- createAnnouncementWithAttachment -->
  <testcase name="openAnnouncement" classname="org.testscript.announcementsender.OpenAnnouncement">
    <skipped/>
  </testcase> <!-- openAnnouncement -->
  <testcase name="checkForDownloadButtonAvailabilityForUserInProfile" classname="org.testscript.skippedfunctionality.CheckForDownloadButtonAvailabilityForUserInProfile">
    <skipped/>
  </testcase> <!-- checkForDownloadButtonAvailabilityForUserInProfile -->
  <testcase name="contentValidationInUpForReviewSearchWithFilter" classname="org.testscript.reviewer.ContentValidationInUpForReviewSearchWithFilter">
    <skipped/>
  </testcase> <!-- contentValidationInUpForReviewSearchWithFilter -->
  <testcase name="openBatchCreation" classname="org.testscript.mentor.OpenBatchCreation">
    <skipped/>
  </testcase> <!-- openBatchCreation -->
  <testcase name="verifyReviewerRequestChangesTheBook" classname="org.testscript.reviewer.VerifyReviewerRequestChangesTheBook">
    <skipped/>
  </testcase> <!-- verifyReviewerRequestChangesTheBook -->
  <testcase name="questionTemplateFillInTheBlankCustom" classname="org.testscript.creator.QuestionTemplateFillInTheBlankCustom">
    <skipped/>
  </testcase> <!-- questionTemplateFillInTheBlankCustom -->
  <testcase name="verifyCopyContent_Library" classname="org.testscript.creator.CopyContentFromLibraryAndVerify">
    <skipped/>
  </testcase> <!-- verifyCopyContent_Library -->
  <testcase name="subOrgUsersProviderAndExtId" classname="org.testscript.skippedfunctionality.SubOrgUsersProviderAndExtId">
    <skipped/>
  </testcase> <!-- subOrgUsersProviderAndExtId -->
  <testcase name="workspace_LimitedPublishing" classname="org.testscript.creator.LimitedSharedContentInLimitedSharingSection">
    <skipped/>
  </testcase> <!-- workspace_LimitedPublishing -->
  <testcase name="dialCodeLink" classname="org.testscript.creator.DialCodeLink">
    <skipped/>
  </testcase> <!-- dialCodeLink -->
  <testcase name="limitedSharingAndDeletingLessonPlan" classname="org.testscript.creator.LimitedSharingAndDeletingLessonPlan">
    <skipped/>
  </testcase> <!-- limitedSharingAndDeletingLessonPlan -->
  <testcase name="uploadContentSaveAndSendForReview" classname="org.testscript.creator.UploadContentSaveAndSendForReview">
    <skipped/>
  </testcase> <!-- uploadContentSaveAndSendForReview -->
  <testcase name="verifyAppliedFilter" classname="org.testscript.reviewer.VerifyAppliedFilter">
    <skipped/>
  </testcase> <!-- verifyAppliedFilter -->
  <testcase name="changeTheContentAfterFlagged" classname="org.testscript.skippedfunctionality.ChangeTheContentAfterFlagged">
    <skipped/>
  </testcase> <!-- changeTheContentAfterFlagged -->
  <testcase name="verifyCreateAnnouncementFeature" classname="org.testscript.announcementsender.VerifyCreateAnnouncementFeature">
    <skipped/>
  </testcase> <!-- verifyCreateAnnouncementFeature -->
  <testcase name="verifyPublishedContentInPublishedBucket" classname="org.testscript.reviewer.PublishTheContent">
    <skipped/>
  </testcase> <!-- verifyPublishedContentInPublishedBucket -->
  <testcase name="verifySaveContentInAllUploads" classname="org.testscript.creator.VerifySaveContentInAllUploads">
    <skipped/>
  </testcase> <!-- verifySaveContentInAllUploads -->
  <testcase name="navigateToPublishedAndDeleteAll" classname="org.testscript.creator.DeleteAllContents">
    <skipped/>
  </testcase> <!-- navigateToPublishedAndDeleteAll -->
  <testcase name="verify_SignUpFailure" classname="org.testscript.publicuser.SameUserNameIsNotAllowedWhileSignup">
    <skipped/>
  </testcase> <!-- verify_SignUpFailure -->
  <testcase name="toVerifyUpdatingOfUpcomingBatchForSearchedCourse" classname="org.testscript.mentor.ToVerifyUpdatingOfUpcomingBatchForSearchedCourse">
    <skipped/>
  </testcase> <!-- toVerifyUpdatingOfUpcomingBatchForSearchedCourse -->
  <testcase name="deletePublishedCourseFromAllMyContent" classname="org.testscript.creator.DeletePublishedCourseFromAllMyContent">
    <skipped/>
  </testcase> <!-- deletePublishedCourseFromAllMyContent -->
  <testcase name="verify_NavigateToGetStarted_ExploreDikshaPage" classname="org.testscript.publicuser.NavigateToGetStartedAndExploreDiksha">
    <skipped/>
  </testcase> <!-- verify_NavigateToGetStarted_ExploreDikshaPage -->
  <testcase name="searchAndDownloadOrgFile" classname="org.testscript.skippedfunctionality.SearchAndDownloadOrgFile">
    <skipped/>
  </testcase> <!-- searchAndDownloadOrgFile -->
  <testcase name="loginAndChangePassword" classname="org.testscript.publicuser.LoginAndChangePassword">
    <skipped/>
  </testcase> <!-- loginAndChangePassword -->
  <testcase name="bookCreateOptionValidation" classname="org.testscript.creator.BookCreateOptionValidation">
    <skipped/>
  </testcase> <!-- bookCreateOptionValidation -->
  <testcase name="createIOBatchWithStartDateAsFutureDate" classname="org.testscript.mentor.CreateIOBatchWithStartDateAsFutureDate">
    <skipped/>
  </testcase> <!-- createIOBatchWithStartDateAsFutureDate -->
  <testcase name="createResourceWithContentsPlugins_VerifyContentEditor" classname="org.testscript.creator.CreateResourceWithContentsPluginsAndVerifyContentEditor">
    <skipped/>
  </testcase> <!-- createResourceWithContentsPlugins_VerifyContentEditor -->
  <testcase name="verifyPublishButtonAndPublishCourse" classname="org.testscript.reviewer.VerifyPublishButtonAndPublishCourse">
    <skipped/>
  </testcase> <!-- verifyPublishButtonAndPublishCourse -->
  <testcase name="checkUpForReviewAsFlagReviewer" classname="org.testscript.skippedfunctionality.CheckUpForReviewAsFlagReviewer">
    <skipped/>
  </testcase> <!-- checkUpForReviewAsFlagReviewer -->
  <testcase name="discardAsFlagReviewer" classname="org.testscript.skippedfunctionality.DiscardAsFlagReviewer">
    <skipped/>
  </testcase> <!-- discardAsFlagReviewer -->
  <testcase name="contentCreator_CloseEditor" classname="org.testscript.creator.VerifyTheClosingOfContentEditor">
    <skipped/>
  </testcase> <!-- contentCreator_CloseEditor -->
  <testcase name="verifycopyContent" classname="org.testscript.creator.VerifycopyContent">
    <skipped/>
  </testcase> <!-- verifycopyContent -->
  <testcase name="navigateToMyActivity" classname="org.testscript.admin.NavigateToMyActivity">
    <skipped/>
  </testcase> <!-- navigateToMyActivity -->
  <testcase name="subOrgUsersProviderAndExtId" classname="org.testscript.skippedfunctionality.UploadSubOrgUsersWithProviderAndExtId">
    <skipped/>
  </testcase> <!-- subOrgUsersProviderAndExtId -->
  <testcase name="updateProfilePhoto" classname="org.testscript.skippedfunctionality.UpdateProfilePhoto">
    <skipped/>
  </testcase> <!-- updateProfilePhoto -->
  <testcase name="searchLessonPlanAndCopy" classname="org.testscript.creator.SearchLessonPlanAndCopy">
    <skipped/>
  </testcase> <!-- searchLessonPlanAndCopy -->
  <testcase name="sendTheCourseForReview" classname="org.testscript.creator.SendTheCourseForReview">
    <skipped/>
  </testcase> <!-- sendTheCourseForReview -->
  <testcase name="deleteAnnouncement" classname="org.testscript.announcementsender.DeleteAnnouncement">
    <skipped/>
  </testcase> <!-- deleteAnnouncement -->
  <testcase name="skillEndorsement" classname="org.testscript.skippedfunctionality.SkillEndorsement">
    <skipped/>
  </testcase> <!-- skillEndorsement -->
  <testcase name="toVerifyUpdatingOfOngoingBatchForSearchedCourse" classname="org.testscript.mentor.ToVerifyUpdatingOfOngoingBatchForSearchedCourse">
    <skipped/>
  </testcase> <!-- toVerifyUpdatingOfOngoingBatchForSearchedCourse -->
  <testcase name="TC_301_rootOrg" classname="org.testscript.regression_removed.TC_301">
    <skipped/>
  </testcase> <!-- TC_301_rootOrg -->
  <testcase name="uploadSubOrg" classname="org.testscript.skippedfunctionality.UploadSubOrg">
    <skipped/>
  </testcase> <!-- uploadSubOrg -->
  <testcase name="navigateToAnnouncementDashboard" classname="org.testscript.announcementsender.NavigateToAnnouncementDashboard">
    <skipped/>
  </testcase> <!-- navigateToAnnouncementDashboard -->
  <testcase name="editAndResendTheExistingAnnouncement" classname="org.testscript.creator.EditAndResendTheExistingAnnouncement">
    <skipped/>
  </testcase> <!-- editAndResendTheExistingAnnouncement -->
  <testcase name="TC_305_rootOrg" classname="org.testscript.regression_removed.TC_305">
    <skipped/>
  </testcase> <!-- TC_305_rootOrg -->
  <testcase name="searchContentWithFiltersAsReviewer" classname="org.testscript.reviewer.SearchContentWithFiltersAsReviewer">
    <skipped/>
  </testcase> <!-- searchContentWithFiltersAsReviewer -->
  <testcase name="createIOBatchWithStartDateAsCurrentDate" classname="org.testscript.mentor.CreateIOBatchWithStartDateAsCurrentDate">
    <skipped/>
  </testcase> <!-- createIOBatchWithStartDateAsCurrentDate -->
  <testcase name="VerifyAnnouncementDetails" classname="org.testscript.announcementsender.VerifyAnnouncementPageContent">
    <skipped/>
  </testcase> <!-- VerifyAnnouncementDetails -->
  <testcase name="VerifyAnnouncementCreationFields" classname="org.testscript.announcementsender.VerifyAnnouncementPageContent">
    <skipped/>
  </testcase> <!-- VerifyAnnouncementCreationFields -->
  <testcase name="verifyAnnouncementMessage" classname="org.testscript.announcementsender.VerifyAnnouncementPageContent">
    <skipped/>
  </testcase> <!-- verifyAnnouncementMessage -->
  <testcase name="verifyCreatedInviteOnlybatch" classname="org.testscript.mentor.VerifyCreatedInviteOnlybatch">
    <skipped/>
  </testcase> <!-- verifyCreatedInviteOnlybatch -->
  <testcase name="verifyHomePage" classname="org.testscript.skippedfunctionality.VerifyHomePage">
    <skipped/>
  </testcase> <!-- verifyHomePage -->
  <testcase name="searchCourseUsingFilter" classname="org.testscript.publicuser.SearchCourseUsingFilter">
    <skipped/>
  </testcase> <!-- searchCourseUsingFilter -->
  <testcase name="TC_303_rootOrg" classname="org.testscript.regression_removed.TC_303">
    <skipped/>
  </testcase> <!-- TC_303_rootOrg -->
  <testcase name="confirmInstructionReceivedInforgotPassword" classname="org.testscript.publicuser.ConfirmInstructionReceivedInforgotPassword">
    <skipped/>
  </testcase> <!-- confirmInstructionReceivedInforgotPassword -->
  <testcase name="workspace_upForReviewSortBy" classname="org.testscript.reviewer.SortTheResultInUpForReview">
    <skipped/>
  </testcase> <!-- workspace_upForReviewSortBy -->
  <testcase name="verifySortOption" classname="org.testscript.creator.VerifySortOption">
    <skipped/>
  </testcase> <!-- verifySortOption -->
  <testcase name="verifyProfileIcon4Features_workspaceFeatures" classname="org.testscript.creator.VerifyFeaturesOfProfileIconAndWorkspace">
    <skipped/>
  </testcase> <!-- verifyProfileIcon4Features_workspaceFeatures -->
  <testcase name="deletePublishedResourcesFromAllMyContent" classname="org.testscript.creator.DeletePublishedResourcesFromAllMyContent">
    <skipped/>
  </testcase> <!-- deletePublishedResourcesFromAllMyContent -->
  <testcase name="verifyElementsInAdminDashboard" classname="org.testscript.admin.VerifyElementsInAdminDashboard">
    <skipped/>
  </testcase> <!-- verifyElementsInAdminDashboard -->
  <testcase name="verifyTheSorting" classname="org.testscript.creator.VerifyTheSorting">
    <skipped/>
  </testcase> <!-- verifyTheSorting -->
  <testcase name="characterVerificationInPreviewKeyboard" classname="org.testscript.creator.CreateResourcePublishAndDeleteFromLimitedPublising">
    <skipped/>
  </testcase> <!-- characterVerificationInPreviewKeyboard -->
  <testcase name="createBookAndVerifyOnlyBooksPresent" classname="org.testscript.creator.CreateBookAndVerifyOnlyBooksPresent">
    <skipped/>
  </testcase> <!-- createBookAndVerifyOnlyBooksPresent -->
  <testcase name="courseCreation" classname="org.testscript.creator.CourseCreation">
    <skipped/>
  </testcase> <!-- courseCreation -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="generateExcelReportFromTestngresult" classname="org.startup.BaseTest">
    <skipped/>
  </testcase> <!-- generateExcelReportFromTestngresult -->
  <testcase name="searchCourse" classname="org.testscript.publicuser.SearchCourse">
    <skipped/>
  </testcase> <!-- searchCourse -->
  <testcase name="searchInLibraryUsingFilter" classname="org.testscript.publicuser.SearchInLibraryUsingFilter">
    <skipped/>
  </testcase> <!-- searchInLibraryUsingFilter -->
  <testcase name="verifyAllMyContentSortByForCreator" classname="org.testscript.creator.VerifySortByInAllMyContentForCreator">
    <skipped/>
  </testcase> <!-- verifyAllMyContentSortByForCreator -->
  <testcase name="resendAnnouncement" classname="org.testscript.announcementsender.ResendAnnouncement">
    <skipped/>
  </testcase> <!-- resendAnnouncement -->
  <testcase name="bookCreation" classname="org.testscript.creator.BookCreation">
    <skipped/>
  </testcase> <!-- bookCreation -->
  <testcase name="deletePublishedLessonPlanFromAllMyContent" classname="org.testscript.creator.DeletePublishedLessonPlanFromAllMyContent">
    <skipped/>
  </testcase> <!-- deletePublishedLessonPlanFromAllMyContent -->
  <testcase name="adminCreationAndDownloadCsv" classname="org.testscript.admin.AdminCreationAndDownloadCsv">
    <skipped/>
  </testcase> <!-- adminCreationAndDownloadCsv -->
  <testcase name="verifyUploadingVideo_AddingActivity" classname="org.testscript.creator.CreateResourceByUploadingVideoAndActivityPlugins">
    <skipped/>
  </testcase> <!-- verifyUploadingVideo_AddingActivity -->
  <testcase name="verifyAddingActivityFunctionality" classname="org.testscript.creator.CreateResourceByUploadingVideoAndActivityPlugins">
    <skipped/>
  </testcase> <!-- verifyAddingActivityFunctionality -->
  <testcase name="rootUsersProviderAndExtID" classname="org.testscript.skippedfunctionality.UploadRootOrgUsersWithProviderAndExtID">
    <skipped/>
  </testcase> <!-- rootUsersProviderAndExtID -->
  <testcase name="uploadRootOrgUsers" classname="org.testscript.skippedfunctionality.UploadRootOrgUsersWithOrgId">
    <skipped/>
  </testcase> <!-- uploadRootOrgUsers -->
  <testcase name="TC_302_rootOrg" classname="org.testscript.regression_removed.TC_302">
    <skipped/>
  </testcase> <!-- TC_302_rootOrg -->
  <testcase name="flagTheContentAsPublicUser" classname="org.testscript.skippedfunctionality.FlagTheContentAsPublicUser">
    <skipped/>
  </testcase> <!-- flagTheContentAsPublicUser -->
  <testcase name="verifyEditDetailsForLessonPlan" classname="org.testscript.creator.VerifyEditDetailsForLessonPlan">
    <skipped/>
  </testcase> <!-- verifyEditDetailsForLessonPlan -->
  <testcase name="rejectTheContent" classname="org.testscript.reviewer.RejectTheContent">
    <skipped/>
  </testcase> <!-- rejectTheContent -->
  <testcase name="createVerifyAndDeleteAnnouncement" classname="org.testscript.announcementsender.CreateVerifyAndDeleteAnnouncement">
    <skipped/>
  </testcase> <!-- createVerifyAndDeleteAnnouncement -->
  <testcase name="reviewAndPublishReceivedContent" classname="org.testscript.reviewer.ReviewAndPublishReceivedContent">
    <skipped/>
  </testcase> <!-- reviewAndPublishReceivedContent -->
  <testcase name="verify_NavigateToGetStarted_ExploreSunbirdPage" classname="org.testscript.publicuser.NavigateToGetStartedAndExploreSunbird">
    <skipped/>
  </testcase> <!-- verify_NavigateToGetStarted_ExploreSunbirdPage -->
  <testcase name="createIOBatchAndSearchTheCourseAsInvitedMember" classname="org.testscript.mentor.CreateIOBatchAndSearchTheCourseAsInvitedMember">
    <skipped/>
  </testcase> <!-- createIOBatchAndSearchTheCourseAsInvitedMember -->
  <testcase name="acceptAsflagReviewer" classname="org.testscript.skippedfunctionality.AcceptAsflagReviewer">
    <skipped/>
  </testcase> <!-- acceptAsflagReviewer -->
  <testcase name="verifyWorkspaceEditailsPage_TopicTree" classname="org.testscript.creator.VerifyEditDetailsPopupAndTopicTree">
    <skipped/>
  </testcase> <!-- verifyWorkspaceEditailsPage_TopicTree -->
  <testcase name="resourceCreation" classname="org.testscript.creator.ResourceCreation">
    <skipped/>
  </testcase> <!-- resourceCreation -->
  <testcase name="verify_PageAccessOnLogin" classname="org.testscript.publicuser.AccessOnAllPagesAfterLogin">
    <skipped/>
  </testcase> <!-- verify_PageAccessOnLogin -->
  <testcase name="verifyUserNavigateToContentEditorPage" classname="org.testscript.creator.VerifyUserNaviagationToContentEditor">
    <skipped/>
  </testcase> <!-- verifyUserNavigateToContentEditorPage -->
  <testcase name="TC_304_rootOrg" classname="org.testscript.regression_removed.TC_304">
    <skipped/>
  </testcase> <!-- TC_304_rootOrg -->
  <testcase name="verifyPublishedContentInPublishedBucket" classname="org.testscript.creator.VerifyPublishedContentInPublishedBucket">
    <skipped/>
  </testcase> <!-- verifyPublishedContentInPublishedBucket -->
  <testcase name="verifyFilledDataWhileCreatingAnnouncement" classname="org.testscript.announcementsender.VerifyFilledDataWhileCreatingAnnouncement">
    <skipped/>
  </testcase> <!-- verifyFilledDataWhileCreatingAnnouncement -->
  <testcase name="searchUsers" classname="org.testscript.publicuser.SearchUsers">
    <skipped/>
  </testcase> <!-- searchUsers -->
  <testcase name="uploadSubOrgUsers" classname="org.testscript.skippedfunctionality.UploadSubOrgUsersWithOrgId">
    <skipped/>
  </testcase> <!-- uploadSubOrgUsers -->
  <testcase name="deleteByStatusInAllMyContent" classname="org.testscript.creator.DeleteContentByStatusInAllMyContent">
    <skipped/>
  </testcase> <!-- deleteByStatusInAllMyContent -->
  <testcase name="navigateToMyActivityInDropdown" classname="org.testscript.mentor.NavigateToMyActivityInDropdown">
    <skipped/>
  </testcase> <!-- navigateToMyActivityInDropdown -->
  <testcase name="verifyThatTopicsAreDisplayedOnMetaDataForm" classname="org.testscript.creator.VerifyThatTopicsAreDisplayedOnMetaDataForm">
    <skipped/>
  </testcase> <!-- verifyThatTopicsAreDisplayedOnMetaDataForm -->
  <testcase name="verifyPublishedBucket" classname="org.testscript.creator.VerifyPublishedBucket">
    <skipped/>
  </testcase> <!-- verifyPublishedBucket -->
  <testcase name="sendForReviewContentUnderReviewSubmission" classname="org.testscript.creator.SendForReviewContentUnderReviewSubmission">
    <skipped/>
  </testcase> <!-- sendForReviewContentUnderReviewSubmission -->
  <testcase name="deletePublishedBookFromAllMyContent" classname="org.testscript.creator.DeletePublishedBookFromAllMyContent">
    <skipped/>
  </testcase> <!-- deletePublishedBookFromAllMyContent -->
  <testcase name="verifyContentInUpForReview" classname="org.testscript.creator.VerifyContentInUpForReview">
    <skipped/>
  </testcase> <!-- verifyContentInUpForReview -->
  <testcase name="checkForAuthenticUserInMentor" classname="org.testscript.mentor.CheckForAuthenticUserInMentor">
    <skipped/>
  </testcase> <!-- checkForAuthenticUserInMentor -->
  <testcase name="verifyBookCreator" classname="org.testscript.creator.VerifyBookCreator">
    <skipped/>
  </testcase> <!-- verifyBookCreator -->
  <testcase name="resendAnnouncementAndVerifyAsReciever" classname="org.testscript.announcementsender.ResendAnnouncementAndVerifyAsReciever">
    <skipped/>
  </testcase> <!-- resendAnnouncementAndVerifyAsReciever -->
  <testcase name="mentorCreateCourseAndCreateOpenBatchForIt" classname="org.testscript.mentor.MentorCreateCourseAndCreateOpenBatchForIt">
    <skipped/>
  </testcase> <!-- mentorCreateCourseAndCreateOpenBatchForIt -->
  <testcase name="TC_295_rootOrg" classname="org.testscript.regression_removed.TC_295">
    <skipped/>
  </testcase> <!-- TC_295_rootOrg -->
  <testcase name="latestContentIsOnTopUpForReviewAndSearch" classname="org.testscript.reviewer.LatestContentOnTopOfUpForReviewAndSearch">
    <skipped/>
  </testcase> <!-- latestContentIsOnTopUpForReviewAndSearch -->
  <testcase name="verifySortByInUpForReview" classname="org.testscript.reviewer.VerifySortByInUpForReview">
    <skipped/>
  </testcase> <!-- verifySortByInUpForReview -->
  <testcase name="searchInLibrary" classname="org.testscript.publicuser.SearchInLibrary">
    <skipped/>
  </testcase> <!-- searchInLibrary -->
  <testcase name="editContentAndSendForReview" classname="org.testscript.creator.EditContentAndSendForReview">
    <skipped/>
  </testcase> <!-- editContentAndSendForReview -->
  <testcase name="createLessonAndVerify" classname="org.testscript.creator.LessonplanCreation">
    <skipped/>
  </testcase> <!-- createLessonAndVerify -->
  <testcase name="verifyThatTopicsAreSelectedOnMetaDataPage" classname="org.testscript.creator.VerifyThatTopicsAreSelectedOnMetaDataPage">
    <skipped/>
  </testcase> <!-- verifyThatTopicsAreSelectedOnMetaDataPage -->
  <testcase name="verifyUploadAndDownloadContent" classname="org.testscript.creator.VerifyUploadAndDownloadContent">
    <skipped/>
  </testcase> <!-- verifyUploadAndDownloadContent -->
  <testcase name="createLessonPlanWith3Resources" classname="org.testscript.creator.CreateLessonPlanWith3Resources">
    <skipped/>
  </testcase> <!-- createLessonPlanWith3Resources -->
  <testcase name="verify_NavigateToGetPage" classname="org.testscript.publicuser.VerifyNavigateToGetPage">
    <skipped/>
  </testcase> <!-- verify_NavigateToGetPage -->
  <testcase name="verifySaveAndSendLessonPlanForReview" classname="org.testscript.creator.VerifySaveAndSendLessonPlanForReview">
    <skipped/>
  </testcase> <!-- verifySaveAndSendLessonPlanForReview -->
  <testcase name="verifyMyactivityLinkInProfileDropdown" classname="org.testscript.creator.VerifyMyActivityLinkInProfileDropdown">
    <skipped/>
  </testcase> <!-- verifyMyactivityLinkInProfileDropdown -->
  <testcase name="profileInfoUpdate" classname="org.testscript.publicuser.ProfileInfoUpdate">
    <skipped/>
  </testcase> <!-- profileInfoUpdate -->
  <testcase name="verifyLimitedSharing" classname="org.testscript.creator.VerifyLimitedSharing">
    <skipped/>
  </testcase> <!-- verifyLimitedSharing -->
  <testcase name="unlinkDailcode" classname="org.testscript.creator.UnlinkDailcode">
    <skipped/>
  </testcase> <!-- unlinkDailcode -->
  <testcase name="deletePublishedCollectionFromAllMyContent" classname="org.testscript.creator.DeletePublishedCollectionFromAllMyContent">
    <skipped/>
  </testcase> <!-- deletePublishedCollectionFromAllMyContent -->
  <testcase name="enrollToCourseInOpenBatch" classname="org.testscript.mentor.EnrollToCourseInOpenBatch">
    <skipped/>
  </testcase> <!-- enrollToCourseInOpenBatch -->
  <testcase name="checkAvailabilityOfCourseForInvitedMember" classname="org.testscript.mentor.CheckAvailabilityOfCourseForInvitedMember">
    <skipped/>
  </testcase> <!-- checkAvailabilityOfCourseForInvitedMember -->
  <testcase name="resource_VerifyAudioUpload" classname="org.testscript.creator.CreateResourceByAddingAudio">
    <skipped/>
  </testcase> <!-- resource_VerifyAudioUpload -->
  <testcase name="consumeOpenCourseByPublicUserAndCheckCourseStatAsMentor" classname="org.testscript.mentor.ConsumeOpenCourseByPublicUserAndCheckCourseStatAsMentor">
    <skipped/>
  </testcase> <!-- consumeOpenCourseByPublicUserAndCheckCourseStatAsMentor -->
  <testcase name="savedContentUnderAllUploads" classname="org.testscript.creator.SavedContentUnderAllUploads">
    <skipped/>
  </testcase> <!-- savedContentUnderAllUploads -->
  <testcase name="checkCourseStatAsMentor" classname="org.testscript.mentor.CheckCourseStatAsMentor">
    <skipped/>
  </testcase> <!-- checkCourseStatAsMentor -->
  <testcase name="VerifySortFeatureOptions" classname="org.testscript.creator.SearchParticularContentInAllMyContent">
    <skipped/>
  </testcase> <!-- VerifySortFeatureOptions -->
  <testcase name="adminConsumptionAndDownloadCsv" classname="org.testscript.skippedfunctionality.AdminConsumptionAndDownloadCsv">
    <skipped/>
  </testcase> <!-- adminConsumptionAndDownloadCsv -->
  <testcase name="verifyFiltersCanBeAppliedInUpForReview" classname="org.testscript.reviewer.VerifyFiltersCanBeAppliedInUpForReview">
    <skipped/>
  </testcase> <!-- verifyFiltersCanBeAppliedInUpForReview -->
  <testcase name="checkTheflaggedContentINDraft" classname="org.testscript.skippedfunctionality.CheckTheflaggedContentINDraft">
    <skipped/>
  </testcase> <!-- checkTheflaggedContentINDraft -->
  <testcase name="limitedSharingTheContent" classname="org.testscript.creator.LimitedSharingTheContent">
    <skipped/>
  </testcase> <!-- limitedSharingTheContent -->
  <testcase name="addChildNodesToLessonPlan" classname="org.testscript.creator.AddChildNodesToLessonPlan">
    <skipped/>
  </testcase> <!-- addChildNodesToLessonPlan -->
  <testcase name="checkInReviewSubmission" classname="org.testscript.creator.CheckInReviewSubmission">
    <skipped/>
  </testcase> <!-- checkInReviewSubmission -->
  <testcase name="verifyTheUploadedContent" classname="org.testscript.creator.VerifyTheUploadedContent">
    <skipped/>
  </testcase> <!-- verifyTheUploadedContent -->
  <testcase name="updateBatchAsInvitedMentor" classname="org.testscript.mentor.UpdateBatchAsInvitedMentor">
    <skipped/>
  </testcase> <!-- updateBatchAsInvitedMentor -->
  <testcase name="verifyMembersAutoInvitatedInInviteOnlyBatch" classname="org.testscript.mentor.VerifyMembersAutoInvitatedInInviteOnlyBatch">
    <skipped/>
  </testcase> <!-- verifyMembersAutoInvitatedInInviteOnlyBatch -->
  <testcase name="suborgMentorInvitingOrgMember" classname="org.testscript.mentor.CheckSuborgMentorInvitingOrgMember">
    <skipped/>
  </testcase> <!-- suborgMentorInvitingOrgMember -->
  <testcase name="seeTheContentBasedOnAppliedFilter" classname="org.testscript.creator.SeeTheContentBasedOnAppliedFilter">
    <skipped/>
  </testcase> <!-- seeTheContentBasedOnAppliedFilter -->
  <testcase name="verifyPropertySectionAndPreviewSlides" classname="org.testscript.creator.VerifyPropertySectionAndPreviewSlides">
    <skipped/>
  </testcase> <!-- verifyPropertySectionAndPreviewSlides -->
  <testcase name="collectionCreation" classname="org.testscript.creator.CollectionCreation">
    <skipped/>
  </testcase> <!-- collectionCreation -->
  <testcase name="verifyTheBookAvailableForReview" classname="org.testscript.creator.VerifyTheBookAvailableForReview">
    <skipped/>
  </testcase> <!-- verifyTheBookAvailableForReview -->
  <testcase name="searchOrgsAsAdmin" classname="org.testscript.skippedfunctionality.SearchOrgsAsAdmin">
    <skipped/>
  </testcase> <!-- searchOrgsAsAdmin -->
  <testcase name="consumeCourseByInvitedMember" classname="org.testscript.mentor.ConsumeCourseByInvitedMember">
    <skipped/>
  </testcase> <!-- consumeCourseByInvitedMember -->
  <testcase name="TC_306_rootOrg" classname="org.testscript.regression_removed.TC_306">
    <skipped/>
  </testcase> <!-- TC_306_rootOrg -->
  <testcase name="questionSetPlugin" classname="org.testscript.creator.AllQuestionSetPlugins">
    <skipped/>
  </testcase> <!-- questionSetPlugin -->
  <testcase name="verifyLatestContentOnTopForReviewer" classname="org.testscript.reviewer.VerifyLatestContentOnTopForReviewer">
    <skipped/>
  </testcase> <!-- verifyLatestContentOnTopForReviewer -->
  <testcase name="createResourceWithMcqQuestion" classname="org.testscript.creator.CreateResourceWithMCQQuestionSet">
    <skipped/>
  </testcase> <!-- createResourceWithMcqQuestion -->
  <testcase name="deletePublishedUploadContentFromAllMyContent" classname="org.testscript.creator.DeletePublishedUploadContentFromAllMyContent">
    <skipped/>
  </testcase> <!-- deletePublishedUploadContentFromAllMyContent -->
  <testcase name="workspaceCollection_verifyEditDetailsPage" classname="org.testscript.creator.VerifyEditMetadataPageForCollection">
    <skipped/>
  </testcase> <!-- workspaceCollection_verifyEditDetailsPage -->
  <testcase name="verifyCreateAnnouncementPopupAndFeatures" classname="org.testscript.announcementsender.VerifyCreateAnnouncementPopupAndFeatures">
    <skipped/>
  </testcase> <!-- verifyCreateAnnouncementPopupAndFeatures -->
  <testcase name="verifyCourseCanBePreviewed" classname="org.testscript.creator.VerifyCourseCanBePreviewed">
    <skipped/>
  </testcase> <!-- verifyCourseCanBePreviewed -->
  <testcase name="editAndResendAnnouncement" classname="org.testscript.creator.EditAndResendAnnouncement">
    <skipped/>
  </testcase> <!-- editAndResendAnnouncement -->
</testsuite> <!-- org.testscript.creator.DeleteTheCreatedContent -->
